{"ast":null,"code":"var _jsxFileName = \"/Users/samsears/Desktop/spotify-playlist-generator/src/components/Form.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { searchTracks } from '../services/spotifyService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Form({\n  onPlaylistGenerated\n}) {\n  _s();\n  const [color, setColor] = useState('');\n  const [city, setCity] = useState('');\n  const [feeling, setFeeling] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const searchQuery = '${color} ${city} ${feeling}';\n    try {\n      const tracks = await searchTracks(searchQuery);\n      onPlaylistGenerated(tracks);\n    } catch (error) {\n      console.error('Error generating playlist:', error);\n    }\n    console.log({\n      color,\n      city,\n      feeling\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: color,\n      onChange: e => setColor(e.target.value),\n      placeholder: \"Enter a color\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: city,\n      onChange: e => setCity(e.target.value),\n      placeholder: \"Enter a city\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: feeling,\n      onChange: e => setFeeling(e.target.value),\n      placeholder: \"Enter a feeling\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Generate Playlist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(Form, \"0AcTSz7sset/o/1aggFWP5ZVa0U=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","searchTracks","jsxDEV","_jsxDEV","Form","onPlaylistGenerated","_s","color","setColor","city","setCity","feeling","setFeeling","handleSubmit","e","preventDefault","searchQuery","tracks","error","console","log","onSubmit","children","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/samsears/Desktop/spotify-playlist-generator/src/components/Form.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { searchTracks } from '../services/spotifyService';\n\nfunction Form( {onPlaylistGenerated }) {\n  const [color, setColor] = useState('');\n  const [city, setCity] = useState('');\n  const [feeling, setFeeling] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const searchQuery = '${color} ${city} ${feeling}' ;\n    try {\n        const tracks =await searchTracks(searchQuery);\n        onPlaylistGenerated(tracks);\n    } catch (error) {\n        console.error( 'Error generating playlist:', error);\n    }\n    console.log({ color, city, feeling });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        value={color}\n        onChange={(e) => setColor(e.target.value)}\n        placeholder=\"Enter a color\"\n      />\n      <input\n        type=\"text\"\n        value={city}\n        onChange={(e) => setCity(e.target.value)}\n        placeholder=\"Enter a city\"\n      />\n      <input\n        type=\"text\"\n        value={feeling}\n        onChange={(e) => setFeeling(e.target.value)}\n        placeholder=\"Enter a feeling\"\n      />\n      <button type=\"submit\">Generate Playlist</button>\n    </form>\n  );\n}\n\nexport default Form;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,SAASC,IAAIA,CAAE;EAACC;AAAoB,CAAC,EAAE;EAAAC,EAAA;EACrC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMa,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,WAAW,GAAG,6BAA6B;IACjD,IAAI;MACA,MAAMC,MAAM,GAAE,MAAMhB,YAAY,CAACe,WAAW,CAAC;MAC7CX,mBAAmB,CAACY,MAAM,CAAC;IAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAE,4BAA4B,EAAEA,KAAK,CAAC;IACvD;IACAC,OAAO,CAACC,GAAG,CAAC;MAAEb,KAAK;MAAEE,IAAI;MAAEE;IAAQ,CAAC,CAAC;EACvC,CAAC;EAED,oBACER,OAAA;IAAMkB,QAAQ,EAAER,YAAa;IAAAS,QAAA,gBAC3BnB,OAAA;MACEoB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEjB,KAAM;MACbkB,QAAQ,EAAGX,CAAC,IAAKN,QAAQ,CAACM,CAAC,CAACY,MAAM,CAACF,KAAK,CAAE;MAC1CG,WAAW,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eACF5B,OAAA;MACEoB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEf,IAAK;MACZgB,QAAQ,EAAGX,CAAC,IAAKJ,OAAO,CAACI,CAAC,CAACY,MAAM,CAACF,KAAK,CAAE;MACzCG,WAAW,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,eACF5B,OAAA;MACEoB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEb,OAAQ;MACfc,QAAQ,EAAGX,CAAC,IAAKF,UAAU,CAACE,CAAC,CAACY,MAAM,CAACF,KAAK,CAAE;MAC5CG,WAAW,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eACF5B,OAAA;MAAQoB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAiB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEX;AAACzB,EAAA,CAxCQF,IAAI;AAAA4B,EAAA,GAAJ5B,IAAI;AA0Cb,eAAeA,IAAI;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}