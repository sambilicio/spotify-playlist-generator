{"ast":null,"code":"var _jsxFileName = \"/Users/samsears/Desktop/spotify-playlist-generator/src/components/playlist.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TrackCard from './TrackCard';\nimport '../styles/Playlist.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Playlist({\n  tracks\n}) {\n  _s();\n  const [playingTrackId, setPlayingTrackId] = useState(null);\n  const handlePlay = trackId => {\n    setPlayingTrackId(trackId);\n  };\n  const handleStop = () => {\n    setPlayingTrackId(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playlist\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Generated Playlist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"track-list\",\n      children: tracks.map((track, index) => /*#__PURE__*/_jsxDEV(TrackCard, {\n        track: track,\n        isPlaying: track.id === playingTrackId,\n        onPlay: () => handlePlay(track.id),\n        onStop: handleStop,\n        tracks: tracks,\n        currentIndex: index\n      }, track.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(Playlist, \"rdQRLPx5Kl/jYXjPThOipwHzdnk=\");\n_c = Playlist;\nexport default Playlist;\nvar _c;\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"names":["React","useState","TrackCard","jsxDEV","_jsxDEV","Playlist","tracks","_s","playingTrackId","setPlayingTrackId","handlePlay","trackId","handleStop","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","track","index","isPlaying","id","onPlay","onStop","currentIndex","_c","$RefreshReg$"],"sources":["/Users/samsears/Desktop/spotify-playlist-generator/src/components/playlist.js"],"sourcesContent":["import React, { useState } from 'react';\nimport TrackCard from './TrackCard';\nimport '../styles/Playlist.css';\n\nfunction Playlist({ tracks }) {\n  const [playingTrackId, setPlayingTrackId] = useState(null);\n\n  const handlePlay = (trackId) => {\n    setPlayingTrackId(trackId);\n  };\n\n  const handleStop = () => {\n    setPlayingTrackId(null);\n  };\n\n  return (\n    <div className=\"playlist\">\n      <h2>Generated Playlist</h2>\n      <div className=\"track-list\">\n        {tracks.map((track, index) => (\n          <TrackCard \n            key={track.id} \n            track={track} \n            isPlaying={track.id === playingTrackId}\n            onPlay={() => handlePlay(track.id)}\n            onStop={handleStop}\n            tracks={tracks}\n            currentIndex={index}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Playlist;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,QAAQA,CAAC;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EAC5B,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE1D,MAAMS,UAAU,GAAIC,OAAO,IAAK;IAC9BF,iBAAiB,CAACE,OAAO,CAAC;EAC5B,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvBH,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;EAED,oBACEL,OAAA;IAAKS,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBV,OAAA;MAAAU,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3Bd,OAAA;MAAKS,SAAS,EAAC,YAAY;MAAAC,QAAA,EACxBR,MAAM,CAACa,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACvBjB,OAAA,CAACF,SAAS;QAERkB,KAAK,EAAEA,KAAM;QACbE,SAAS,EAAEF,KAAK,CAACG,EAAE,KAAKf,cAAe;QACvCgB,MAAM,EAAEA,CAAA,KAAMd,UAAU,CAACU,KAAK,CAACG,EAAE,CAAE;QACnCE,MAAM,EAAEb,UAAW;QACnBN,MAAM,EAAEA,MAAO;QACfoB,YAAY,EAAEL;MAAM,GANfD,KAAK,CAACG,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOd,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACX,EAAA,CA7BQF,QAAQ;AAAAsB,EAAA,GAARtB,QAAQ;AA+BjB,eAAeA,QAAQ;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}